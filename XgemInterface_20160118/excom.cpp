// Machine generated IDispatch wrapper class(es) created by Microsoft Visual C++

// NOTE: Do not modify the contents of this file.  If this class is regenerated by
//  Microsoft Visual C++, your modifications will be overwritten.


#include "stdafx.h"
#include "excom.h"

/////////////////////////////////////////////////////////////////////////////
// CeXCom

IMPLEMENT_DYNCREATE(CeXCom, CWnd)

/////////////////////////////////////////////////////////////////////////////
// CeXCom properties

short CeXCom::GetDeviceID()
{
	short result;
	GetProperty(0x1, VT_I2, (void*)&result);
	return result;
}

void CeXCom::SetDeviceID(short propVal)
{
	SetProperty(0x1, VT_I2, propVal);
}

short CeXCom::GetStream()
{
	short result;
	GetProperty(0x2, VT_I2, (void*)&result);
	return result;
}

void CeXCom::SetStream(short propVal)
{
	SetProperty(0x2, VT_I2, propVal);
}

short CeXCom::GetFunction()
{
	short result;
	GetProperty(0x3, VT_I2, (void*)&result);
	return result;
}

void CeXCom::SetFunction(short propVal)
{
	SetProperty(0x3, VT_I2, propVal);
}

long CeXCom::GetSystemBytes()
{
	long result;
	GetProperty(0x4, VT_I4, (void*)&result);
	return result;
}

void CeXCom::SetSystemBytes(long propVal)
{
	SetProperty(0x4, VT_I4, propVal);
}

short CeXCom::GetWbit()
{
	short result;
	GetProperty(0x5, VT_I2, (void*)&result);
	return result;
}

void CeXCom::SetWbit(short propVal)
{
	SetProperty(0x5, VT_I2, propVal);
}

short CeXCom::GetRbit()
{
	short result;
	GetProperty(0x6, VT_I2, (void*)&result);
	return result;
}

void CeXCom::SetRbit(short propVal)
{
	SetProperty(0x6, VT_I2, propVal);
}

short CeXCom::GetEbit()
{
	short result;
	GetProperty(0x7, VT_I2, (void*)&result);
	return result;
}

void CeXCom::SetEbit(short propVal)
{
	SetProperty(0x7, VT_I2, propVal);
}

short CeXCom::GetPType()
{
	short result;
	GetProperty(0x8, VT_I2, (void*)&result);
	return result;
}

void CeXCom::SetPType(short propVal)
{
	SetProperty(0x8, VT_I2, propVal);
}

short CeXCom::GetSType()
{
	short result;
	GetProperty(0x9, VT_I2, (void*)&result);
	return result;
}

void CeXCom::SetSType(short propVal)
{
	SetProperty(0x9, VT_I2, propVal);
}

short CeXCom::GetBlock()
{
	short result;
	GetProperty(0xa, VT_I2, (void*)&result);
	return result;
}

void CeXCom::SetBlock(short propVal)
{
	SetProperty(0xa, VT_I2, propVal);
}

long CeXCom::GetHeaderSize()
{
	long result;
	GetProperty(0xb, VT_I4, (void*)&result);
	return result;
}

void CeXCom::SetHeaderSize(long propVal)
{
	SetProperty(0xb, VT_I4, propVal);
}

long CeXCom::GetMsgSize()
{
	long result;
	GetProperty(0xc, VT_I4, (void*)&result);
	return result;
}

void CeXCom::SetMsgSize(long propVal)
{
	SetProperty(0xc, VT_I4, propVal);
}

/////////////////////////////////////////////////////////////////////////////
// CeXCom operations

short CeXCom::Initialize(LPCTSTR sCfgFile)
{
	short result;
	static BYTE parms[] =
		VTS_BSTR;
	InvokeHelper(0xd, DISPATCH_METHOD, VT_I2, (void*)&result, parms,
		sCfgFile);
	return result;
}

short CeXCom::Close()
{
	short result;
	InvokeHelper(0xe, DISPATCH_METHOD, VT_I2, (void*)&result, NULL);
	return result;
}

short CeXCom::Start()
{
	short result;
	InvokeHelper(0xf, DISPATCH_METHOD, VT_I2, (void*)&result, NULL);
	return result;
}

short CeXCom::Stop()
{
	short result;
	InvokeHelper(0x10, DISPATCH_METHOD, VT_I2, (void*)&result, NULL);
	return result;
}

short CeXCom::MakeSecsMsg(long* plMsgId, short nDevId, short nStrm, short nFunc, long lSysByte)
{
	short result;
	static BYTE parms[] =
		VTS_PI4 VTS_I2 VTS_I2 VTS_I2 VTS_I4;
	InvokeHelper(0x11, DISPATCH_METHOD, VT_I2, (void*)&result, parms,
		plMsgId, nDevId, nStrm, nFunc, lSysByte);
	return result;
}

short CeXCom::Send(long lMsgId)
{
	short result;
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0x12, DISPATCH_METHOD, VT_I2, (void*)&result, parms,
		lMsgId);
	return result;
}

short CeXCom::LoadSecsMsg(long* plMsgId, short* pnDevId, short* pnStrm, short* pnFunc, long* plSysByte, short* pnWbit)
{
	short result;
	static BYTE parms[] =
		VTS_PI4 VTS_PI2 VTS_PI2 VTS_PI2 VTS_PI4 VTS_PI2;
	InvokeHelper(0x13, DISPATCH_METHOD, VT_I2, (void*)&result, parms,
		plMsgId, pnDevId, pnStrm, pnFunc, plSysByte, pnWbit);
	return result;
}

void CeXCom::CloseSecsMsg(long lMsgId)
{
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0x14, DISPATCH_METHOD, VT_EMPTY, NULL, parms,
		 lMsgId);
}

short CeXCom::GetListItem(long lMsgId, short* pnItems)
{
	short result;
	static BYTE parms[] =
		VTS_I4 VTS_PI2;
	InvokeHelper(0x15, DISPATCH_METHOD, VT_I2, (void*)&result, parms,
		lMsgId, pnItems);
	return result;
}

short CeXCom::GetBinaryItem(long lMsgId, short* pnValue, long* plCount, long lSize)
{
	short result;
	static BYTE parms[] =
		VTS_I4 VTS_PI2 VTS_PI4 VTS_I4;
	InvokeHelper(0x16, DISPATCH_METHOD, VT_I2, (void*)&result, parms,
		lMsgId, pnValue, plCount, lSize);
	return result;
}

short CeXCom::GetBoolItem(long lMsgId, short* pnValue, long* plCount, long lSize)
{
	short result;
	static BYTE parms[] =
		VTS_I4 VTS_PI2 VTS_PI4 VTS_I4;
	InvokeHelper(0x17, DISPATCH_METHOD, VT_I2, (void*)&result, parms,
		lMsgId, pnValue, plCount, lSize);
	return result;
}

short CeXCom::GetAsciiItem(long lMsgId, BSTR* psValue, long* plCount)
{
	short result;
	static BYTE parms[] =
		VTS_I4 VTS_PBSTR VTS_PI4;
	InvokeHelper(0x18, DISPATCH_METHOD, VT_I2, (void*)&result, parms,
		lMsgId, psValue, plCount);
	return result;
}

short CeXCom::GetJis8Item(long lMsgId, BSTR* psValue, long* plCount)
{
	short result;
	static BYTE parms[] =
		VTS_I4 VTS_PBSTR VTS_PI4;
	InvokeHelper(0x19, DISPATCH_METHOD, VT_I2, (void*)&result, parms,
		lMsgId, psValue, plCount);
	return result;
}

short CeXCom::GetI1Item(long lMsgId, short* pnValue, long* plCount, long lSize)
{
	short result;
	static BYTE parms[] =
		VTS_I4 VTS_PI2 VTS_PI4 VTS_I4;
	InvokeHelper(0x1a, DISPATCH_METHOD, VT_I2, (void*)&result, parms,
		lMsgId, pnValue, plCount, lSize);
	return result;
}

short CeXCom::GetI2Item(long lMsgId, short* pnValue, long* plCount, long lSize)
{
	short result;
	static BYTE parms[] =
		VTS_I4 VTS_PI2 VTS_PI4 VTS_I4;
	InvokeHelper(0x1b, DISPATCH_METHOD, VT_I2, (void*)&result, parms,
		lMsgId, pnValue, plCount, lSize);
	return result;
}

short CeXCom::GetI4Item(long lMsgId, long* plValue, long* plCount, long lSize)
{
	short result;
	static BYTE parms[] =
		VTS_I4 VTS_PI4 VTS_PI4 VTS_I4;
	InvokeHelper(0x1c, DISPATCH_METHOD, VT_I2, (void*)&result, parms,
		lMsgId, plValue, plCount, lSize);
	return result;
}

short CeXCom::GetI8Item(long lMsgId, long* plValue, long* plCount, long lSize)
{
	short result;
	static BYTE parms[] =
		VTS_I4 VTS_PI4 VTS_PI4 VTS_I4;
	InvokeHelper(0x1d, DISPATCH_METHOD, VT_I2, (void*)&result, parms,
		lMsgId, plValue, plCount, lSize);
	return result;
}

short CeXCom::GetU1Item(long lMsgId, short* pnValue, long* plCount, long lSize)
{
	short result;
	static BYTE parms[] =
		VTS_I4 VTS_PI2 VTS_PI4 VTS_I4;
	InvokeHelper(0x1e, DISPATCH_METHOD, VT_I2, (void*)&result, parms,
		lMsgId, pnValue, plCount, lSize);
	return result;
}

short CeXCom::GetU2Item(long lMsgId, long* plValue, long* plCount, long lSize)
{
	short result;
	static BYTE parms[] =
		VTS_I4 VTS_PI4 VTS_PI4 VTS_I4;
	InvokeHelper(0x1f, DISPATCH_METHOD, VT_I2, (void*)&result, parms,
		lMsgId, plValue, plCount, lSize);
	return result;
}

short CeXCom::GetU4Item(long lMsgId, double* prValue, long* plCount, long lSize)
{
	short result;
	static BYTE parms[] =
		VTS_I4 VTS_PR8 VTS_PI4 VTS_I4;
	InvokeHelper(0x20, DISPATCH_METHOD, VT_I2, (void*)&result, parms,
		lMsgId, prValue, plCount, lSize);
	return result;
}

short CeXCom::GetU8Item(long lMsgId, double* prValue, long* plCount, long lSize)
{
	short result;
	static BYTE parms[] =
		VTS_I4 VTS_PR8 VTS_PI4 VTS_I4;
	InvokeHelper(0x21, DISPATCH_METHOD, VT_I2, (void*)&result, parms,
		lMsgId, prValue, plCount, lSize);
	return result;
}

short CeXCom::GetF4Item(long lMsgId, float* prValue, long* plCount, long lSize)
{
	short result;
	static BYTE parms[] =
		VTS_I4 VTS_PR4 VTS_PI4 VTS_I4;
	InvokeHelper(0x22, DISPATCH_METHOD, VT_I2, (void*)&result, parms,
		lMsgId, prValue, plCount, lSize);
	return result;
}

short CeXCom::GetF8Item(long lMsgId, double* prValue, long* plCount, long lSize)
{
	short result;
	static BYTE parms[] =
		VTS_I4 VTS_PR8 VTS_PI4 VTS_I4;
	InvokeHelper(0x23, DISPATCH_METHOD, VT_I2, (void*)&result, parms,
		lMsgId, prValue, plCount, lSize);
	return result;
}

short CeXCom::SetListItem(long lMsgId, short nItems)
{
	short result;
	static BYTE parms[] =
		VTS_I4 VTS_I2;
	InvokeHelper(0x24, DISPATCH_METHOD, VT_I2, (void*)&result, parms,
		lMsgId, nItems);
	return result;
}

short CeXCom::SetBinaryItem(long lMsgId, short* pnValue, long lCount)
{
	short result;
	static BYTE parms[] =
		VTS_I4 VTS_PI2 VTS_I4;
	InvokeHelper(0x25, DISPATCH_METHOD, VT_I2, (void*)&result, parms,
		lMsgId, pnValue, lCount);
	return result;
}

short CeXCom::SetBoolItem(long lMsgId, short* pnValue, long lCount)
{
	short result;
	static BYTE parms[] =
		VTS_I4 VTS_PI2 VTS_I4;
	InvokeHelper(0x26, DISPATCH_METHOD, VT_I2, (void*)&result, parms,
		lMsgId, pnValue, lCount);
	return result;
}

short CeXCom::SetAsciiItem(long lMsgId, LPCTSTR pszValue, long lCount)
{
	short result;
	static BYTE parms[] =
		VTS_I4 VTS_BSTR VTS_I4;
	InvokeHelper(0x27, DISPATCH_METHOD, VT_I2, (void*)&result, parms,
		lMsgId, pszValue, lCount);
	return result;
}

short CeXCom::SetJis8Item(long lMsgId, LPCTSTR pszValue, long lCount)
{
	short result;
	static BYTE parms[] =
		VTS_I4 VTS_BSTR VTS_I4;
	InvokeHelper(0x28, DISPATCH_METHOD, VT_I2, (void*)&result, parms,
		lMsgId, pszValue, lCount);
	return result;
}

short CeXCom::SetI1Item(long lMsgId, short* pnValue, long lCount)
{
	short result;
	static BYTE parms[] =
		VTS_I4 VTS_PI2 VTS_I4;
	InvokeHelper(0x29, DISPATCH_METHOD, VT_I2, (void*)&result, parms,
		lMsgId, pnValue, lCount);
	return result;
}

short CeXCom::SetI2Item(long lMsgId, short* pnValue, long lCount)
{
	short result;
	static BYTE parms[] =
		VTS_I4 VTS_PI2 VTS_I4;
	InvokeHelper(0x2a, DISPATCH_METHOD, VT_I2, (void*)&result, parms,
		lMsgId, pnValue, lCount);
	return result;
}

short CeXCom::SetI4Item(long lMsgId, long* plValue, long lCount)
{
	short result;
	static BYTE parms[] =
		VTS_I4 VTS_PI4 VTS_I4;
	InvokeHelper(0x2b, DISPATCH_METHOD, VT_I2, (void*)&result, parms,
		lMsgId, plValue, lCount);
	return result;
}

short CeXCom::SetI8Item(long lMsgId, long* plValue, long lCount)
{
	short result;
	static BYTE parms[] =
		VTS_I4 VTS_PI4 VTS_I4;
	InvokeHelper(0x2c, DISPATCH_METHOD, VT_I2, (void*)&result, parms,
		lMsgId, plValue, lCount);
	return result;
}

short CeXCom::SetU1Item(long lMsgId, short* pnValue, long lCount)
{
	short result;
	static BYTE parms[] =
		VTS_I4 VTS_PI2 VTS_I4;
	InvokeHelper(0x2d, DISPATCH_METHOD, VT_I2, (void*)&result, parms,
		lMsgId, pnValue, lCount);
	return result;
}

short CeXCom::SetU2Item(long lMsgId, long* plValue, long lCount)
{
	short result;
	static BYTE parms[] =
		VTS_I4 VTS_PI4 VTS_I4;
	InvokeHelper(0x2e, DISPATCH_METHOD, VT_I2, (void*)&result, parms,
		lMsgId, plValue, lCount);
	return result;
}

short CeXCom::SetU4Item(long lMsgId, double* prValue, long lCount)
{
	short result;
	static BYTE parms[] =
		VTS_I4 VTS_PR8 VTS_I4;
	InvokeHelper(0x2f, DISPATCH_METHOD, VT_I2, (void*)&result, parms,
		lMsgId, prValue, lCount);
	return result;
}

short CeXCom::SetU8Item(long lMsgId, double* prValue, long lCount)
{
	short result;
	static BYTE parms[] =
		VTS_I4 VTS_PR8 VTS_I4;
	InvokeHelper(0x30, DISPATCH_METHOD, VT_I2, (void*)&result, parms,
		lMsgId, prValue, lCount);
	return result;
}

short CeXCom::SetF4Item(long lMsgId, float* prValue, long lCount)
{
	short result;
	static BYTE parms[] =
		VTS_I4 VTS_PR4 VTS_I4;
	InvokeHelper(0x31, DISPATCH_METHOD, VT_I2, (void*)&result, parms,
		lMsgId, prValue, lCount);
	return result;
}

short CeXCom::SetF8Item(long lMsgId, double* prValue, long lCount)
{
	short result;
	static BYTE parms[] =
		VTS_I4 VTS_PR8 VTS_I4;
	InvokeHelper(0x32, DISPATCH_METHOD, VT_I2, (void*)&result, parms,
		lMsgId, prValue, lCount);
	return result;
}

short CeXCom::EnableLog(short nLogType, short nEnabled)
{
	short result;
	static BYTE parms[] =
		VTS_I2 VTS_I2;
	InvokeHelper(0x33, DISPATCH_METHOD, VT_I2, (void*)&result, parms,
		nLogType, nEnabled);
	return result;
}

short CeXCom::GetHeaderBytes(long lMsgId, short* pnHeader, short nSize)
{
	short result;
	static BYTE parms[] =
		VTS_I4 VTS_PI2 VTS_I2;
	InvokeHelper(0x34, DISPATCH_METHOD, VT_I2, (void*)&result, parms,
		lMsgId, pnHeader, nSize);
	return result;
}

long CeXCom::GetMsgBytes(long lMsgId, short* pnMsg, long lSize)
{
	long result;
	static BYTE parms[] =
		VTS_I4 VTS_PI2 VTS_I4;
	InvokeHelper(0x35, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
		lMsgId, pnMsg, lSize);
	return result;
}

short CeXCom::SetHeaderBytes(long lMsgId, short* pnHeader, short nSize)
{
	short result;
	static BYTE parms[] =
		VTS_I4 VTS_PI2 VTS_I2;
	InvokeHelper(0x36, DISPATCH_METHOD, VT_I2, (void*)&result, parms,
		lMsgId, pnHeader, nSize);
	return result;
}

long CeXCom::SetMsgBytes(long lMsgId, short* pnMsg, long lSize)
{
	long result;
	static BYTE parms[] =
		VTS_I4 VTS_PI2 VTS_I4;
	InvokeHelper(0x37, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
		lMsgId, pnMsg, lSize);
	return result;
}

short CeXCom::GetAlarmMsgInfo(long lMsgId, short* pnDevId, short* pnStrm, short* pnFunc, long* plSysByte, short* pnWbit)
{
	short result;
	static BYTE parms[] =
		VTS_I4 VTS_PI2 VTS_PI2 VTS_PI2 VTS_PI4 VTS_PI2;
	InvokeHelper(0x38, DISPATCH_METHOD, VT_I2, (void*)&result, parms,
		lMsgId, pnDevId, pnStrm, pnFunc, plSysByte, pnWbit);
	return result;
}

short CeXCom::DebugInfo(short* pnInfo)
{
	short result;
	static BYTE parms[] =
		VTS_PI2;
	InvokeHelper(0x39, DISPATCH_METHOD, VT_I2, (void*)&result, parms,
		pnInfo);
	return result;
}

long CeXCom::GetSysBytes(long lMsgId)
{
	long result;
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0x3a, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
		lMsgId);
	return result;
}

short CeXCom::SetStringItem(long lMsgId, BSTR* pbstrValue, long lCount)
{
	short result;
	static BYTE parms[] =
		VTS_I4 VTS_PBSTR VTS_I4;
	InvokeHelper(0x3b, DISPATCH_METHOD, VT_I2, (void*)&result, parms,
		lMsgId, pbstrValue, lCount);
	return result;
}

short CeXCom::SetWBit(long lMsgId, short nWBit)
{
	short result;
	static BYTE parms[] =
		VTS_I4 VTS_I2;
	InvokeHelper(0x3c, DISPATCH_METHOD, VT_I2, (void*)&result, parms,
		lMsgId, nWBit);
	return result;
}

short CeXCom::GetInvalidMsgInfo(long lMsgId, short* pnDevId, short* pnStrm, short* pnFunc, long* plSysByte, short* pnWbit)
{
	short result;
	static BYTE parms[] =
		VTS_I4 VTS_PI2 VTS_PI2 VTS_PI2 VTS_PI4 VTS_PI2;
	InvokeHelper(0x3d, DISPATCH_METHOD, VT_I2, (void*)&result, parms,
		lMsgId, pnDevId, pnStrm, pnFunc, plSysByte, pnWbit);
	return result;
}

short CeXCom::MakeSpoolStream(long lMsgId)
{
	short result;
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0x3e, DISPATCH_METHOD, VT_I2, (void*)&result, parms,
		lMsgId);
	return result;
}

short CeXCom::ProcExternalStream(short* pnMsg, long lSize)
{
	short result;
	static BYTE parms[] =
		VTS_PI2 VTS_I4;
	InvokeHelper(0x3f, DISPATCH_METHOD, VT_I2, (void*)&result, parms,
		pnMsg, lSize);
	return result;
}

CString CeXCom::GetParam(LPCTSTR pszParamName)
{
	CString result;
	static BYTE parms[] =
		VTS_BSTR;
	InvokeHelper(0x40, DISPATCH_METHOD, VT_BSTR, (void*)&result, parms,
		pszParamName);
	return result;
}

short CeXCom::SetParam(LPCTSTR psParamName, LPCTSTR psVal)
{
	short result;
	static BYTE parms[] =
		VTS_BSTR VTS_BSTR;
	InvokeHelper(0x41, DISPATCH_METHOD, VT_I2, (void*)&result, parms,
		psParamName, psVal);
	return result;
}

CString CeXCom::GetStringItem(long lMsgId, long* plCount)
{
	CString result;
	static BYTE parms[] =
		VTS_I4 VTS_PI4;
	InvokeHelper(0x42, DISPATCH_METHOD, VT_BSTR, (void*)&result, parms,
		lMsgId, plCount);
	return result;
}

short CeXCom::SetAsciiFillSpace(short nVal)
{
	short result;
	static BYTE parms[] =
		VTS_I2;
	InvokeHelper(0x43, DISPATCH_METHOD, VT_I2, (void*)&result, parms,
		nVal);
	return result;
}

long CeXCom::GeneralCall(long lMsgId, short nDispatchId, long lpDispatchData, long lDispatchArg1, long lDispatchArg2)
{
	long result;
	static BYTE parms[] =
		VTS_I4 VTS_I2 VTS_I4 VTS_I4 VTS_I4;
	InvokeHelper(0x44, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
		lMsgId, nDispatchId, lpDispatchData, lDispatchArg1, lDispatchArg2);
	return result;
}

short CeXCom::GetCurrentItemType(long lMsgId)
{
	short result;
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0x45, DISPATCH_METHOD, VT_I2, (void*)&result, parms,
		lMsgId);
	return result;
}

long CeXCom::GetCurrentItemCount(long lMsgId)
{
	long result;
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0x46, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
		lMsgId);
	return result;
}

CString CeXCom::GetSecsLog(long lMsgId)
{
	CString result;
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0x47, DISPATCH_METHOD, VT_BSTR, (void*)&result, parms,
		lMsgId);
	return result;
}

short CeXCom::BeginList(long lMsgId)
{
	short result;
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0x48, DISPATCH_METHOD, VT_I2, (void*)&result, parms,
		lMsgId);
	return result;
}

short CeXCom::EndList(long lMsgId)
{
	short result;
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0x49, DISPATCH_METHOD, VT_I2, (void*)&result, parms,
		lMsgId);
	return result;
}
